{"remainingRequest":"E:\\projects\\blog\\blog-admin\\node_modules\\babel-loader\\lib\\index.js!E:\\projects\\blog\\blog-admin\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!E:\\projects\\blog\\blog-admin\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!E:\\projects\\blog\\blog-admin\\src\\views\\dashboard\\admin\\index.vue?vue&type=script&lang=js&","dependencies":[{"path":"E:\\projects\\blog\\blog-admin\\src\\views\\dashboard\\admin\\index.vue","mtime":1681646321103},{"path":"E:\\projects\\blog\\blog-admin\\babel.config.js","mtime":1675760965000},{"path":"E:\\projects\\blog\\blog-admin\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1680778862035},{"path":"E:\\projects\\blog\\blog-admin\\node_modules\\babel-loader\\lib\\index.js","mtime":1680778862378},{"path":"E:\\projects\\blog\\blog-admin\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1680778862035},{"path":"E:\\projects\\blog\\blog-admin\\node_modules\\vue-loader\\lib\\index.js","mtime":1680778857385}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"names":["GithubCorner","PanelGroup","BoxCard","echarts","require","init","name","components","data","tagDTOList","categoryChart","chart","list","BLOG_WEB_URL","process","env","VUE_APP_BLOG_WEB_API","blogContributeCount","centerDialogVisible","$store","state","app","openNotificationDialogVisible","dashboard","mounted","_this","$nextTick","beforeDestroy","dispose","methods","_this2","then","res","blogArticles","tagsList","initContributeDate","contribute","contributeDate","initCategoryChart","categoryList","result","initChart","userAccess","catch","err","console","log","document","getElementById","option","title","top","text","subtext","left","textStyle","color","tooltip","trigger","formatter","params","legend","calendar","range","splitLine","show","lineStyle","width","type","yearLabel","dayLabel","nameMap","firstDay","monthLabel","itemStyle","normal","borderWidth","borderColor","series","coordinateSystem","symbolSize","val","size","setOption","window","addEventListener","resize","bottom","roseType","radius","center","animationEasing","animationDuration","datas","createData","countData","accessData","forEach","item","push","createTime","ip","access","setOptions","_ref","arguments","length","undefined","xAxis","boundaryGap","axisTick","grid","right","containLabel","axisPointer","padding","yAxis","smooth","areaStyle","closeNotificationDialogVisible","done","dispatch","onClick","row","open","id"],"sources":["src/views/dashboard/admin/index.vue"],"sourcesContent":["<template>\n  <div class=\"dashboard-editor-container\">\n    <github-corner class=\"github-corner\" />\n\n    <panel-group  />\n\n    <el-row style=\"background:#fff;padding:16px 16px 0;margin-bottom:32px;\">\n      <div id=\"container\" style=\" width: 100%; height: 300px;\"></div>\n    </el-row>\n\n    <el-row :gutter=\"20\" style=\"margin-top:1.25rem\">\n      <el-col :xs=\"24\" :sm=\"24\" :lg=\"8\">\n        <el-card>\n          <div class=\"e-title\">文章阅读量排行</div>\n          <el-table :data=\"list\" style=\"width: 100%;padding-top: 15px\">\n            <el-table-column label=\"标题\" min-width=\"200\">\n              <template slot-scope=\"scope\">\n                <el-link :underline=\"false\" @click=\"onClick(scope.row)\">{{ scope.row.title }}</el-link>\n              </template>\n            </el-table-column>\n            <el-table-column label=\"阅读量\" prop=\"quantity\" width=\"100\" align=\"center\"/>\n          </el-table>\n        </el-card>\n      </el-col>\n\n      <el-col :xs=\"24\" :sm=\"24\" :lg=\"8\">\n        <el-card>\n          <div class=\"e-title\">文章分类统计</div>\n          <div class=\"chart-wrapper\">\n            <div id=\"categoryChart\" class=\"chart\" style=\"height:310px;width:100%\" />\n          </div>\n        </el-card>\n      </el-col>\n\n      <!-- 文章标签统计 -->\n      <el-col :xs=\"24\" :sm=\"24\" :lg=\"8\">\n        <el-card style=\"height: 417px\">\n          <div class=\"e-title\">文章标签统计</div>\n          <div>\n            <tag-cloud style=\"margin-top:1.5rem\" :data=\"tagDTOList\" />\n          </div>\n        </el-card>\n      </el-col>\n    </el-row>\n\n\n    <el-row style=\"margin-top:1.25rem\">\n      <el-card>\n        <div class=\"e-title\">一周访问量</div>\n        <div id=\"access\" class=\"chart\" style=\"height:350px;width:100%\" />\n      </el-card>\n    </el-row>\n\n    <!--<el-dialog\n      title=\"通知\"\n      :close-on-click-modal=\"false\"\n      :visible.sync=\"centerDialogVisible\"\n      width=\"50%\"\n      :before-close=\"closeNotificationDialogVisible\"\n      center>\n      <span v-html=\"dashboard\"></span>\n    </el-dialog>-->\n  </div>\n</template>\n\n<script>\nimport GithubCorner from '@/components/GithubCorner'\nimport PanelGroup from './components/PanelGroup'\nimport BoxCard from './components/BoxCard'\nimport * as echarts from 'echarts'\nrequire('echarts/theme/macarons') // echarts theme\n//import resize from './mixins/resize'\nimport { init} from \"@/api/home\";\nexport default {\n  name: 'DashboardAdmin',\n  components: {\n    GithubCorner,\n    PanelGroup,\n    BoxCard\n  },\n  data() {\n    return {\n      tagDTOList: [],\n      categoryChart: null,\n      chart: null,\n      list: [],\n      BLOG_WEB_URL: process.env.VUE_APP_BLOG_WEB_API,\n      blogContributeCount: [],\n      centerDialogVisible: this.$store.state.app.openNotificationDialogVisible,\n      dashboard: null\n    }\n  },\n  mounted() {\n    this.$nextTick(() => {\n      this.init()\n    })\n  },\n  beforeDestroy() {\n    if (!this.categoryChart) {\n      return\n    }\n    this.categoryChart.dispose()\n    this.categoryChart = null\n  },\n  methods: {\n    init:function (){\n      init().then(res =>{\n        this.list = res.data.blogArticles\n        this.dashboard = res.data.dashboard;\n        this.tagDTOList = res.data.tagsList;\n        this.initContributeDate(res.data.contribute.contributeDate,res.data.contribute.blogContributeCount)\n        this.initCategoryChart(res.data.categoryList.categoryList,res.data.categoryList.result)\n        this.initChart(res.data.userAccess)\n      }).catch(err =>{\n        console.log(err)\n      })\n    },\n    //初始化文章贡献度\n    initContributeDate: function (contributeDate,blogContributeCount) {\n      let chart = echarts.init(document.getElementById('container'))\n      let option = {\n        //设置背景\n        // backgroundColor: '#d0d0d0',\n        title: {\n          top: 30,\n          text: '文章贡献度',\n          subtext: '一年内博客提交的数量',\n          left: 'center',\n          textStyle: {\n            color: '#000'\n          }\n        },\n        tooltip: {\n          trigger: 'item',\n          formatter: function (params) {\n            return (params.data[0] + '<br>文章数：' + params.data[1])\n          }\n        },\n        legend: {\n          top: '30',\n          left: '100',\n          data: ['文章数', 'Top 12'],\n          textStyle: {\n            // 设置字体颜色\n            color: '#000'\n          }\n        },\n        calendar: [{\n          top: 100,\n          left: 'center',\n          range: contributeDate,\n          splitLine: {\n            show: true,\n            lineStyle: {\n              // 设置月份分割线的颜色\n              color: '#D3D3D3',\n              width: 4,\n              type: 'solid'\n            }\n          },\n          yearLabel: {show: false},\n          dayLabel: {\n            nameMap: [\"周日\", \"周一\", \"周二\", \"周三\", \"周四\", \"周五\", \"周六\"], // 设置中文显示\n            textStyle: {\n              // 设置周显示颜色\n              color: '#000'\n            },\n            firstDay: 1 // 从周一开始\n          },\n          monthLabel: {\n            nameMap: 'cn', // 设置中文显示\n            textStyle: {\n              // 设置月显示颜色\n              color: '#000'\n            }\n          },\n          itemStyle: {\n            normal: {\n              // 设置背景颜色\n              color: '#ffffff',\n              borderWidth: 1,\n              // 设置方块分割线段颜色\n              borderColor: '#D3D3D3'\n            }\n          }\n        }],\n        series: [\n          {\n            name: '文章数',\n            type: 'scatter',\n            coordinateSystem: 'calendar',\n            data: blogContributeCount,\n            // 根据值设置原点大小\n            symbolSize: function (val) {\n              if (val[1] === 0) {\n                return val[1];\n              } else {\n                let size = 8 + val[1] * 2;\n                if (size > 18) {\n                  size = 18;\n                }\n                return size;\n              }\n            },\n            itemStyle: {\n              normal: {\n                // 设置圆点颜色\n                color: '#2ec7c9'\n              }\n            }\n          }\n        ]\n      };\n      chart.setOption(option);\n      window.addEventListener(\"resize\",function(){\n        chart.resize();\n      });\n\n    },\n\n    //初始化分类统计\n    initCategoryChart: function (categoryList,result) {\n      this.categoryChart = echarts.init(document.getElementById(\"categoryChart\"))\n      this.categoryChart.setOption({\n        tooltip: {\n          trigger: 'item',\n          formatter: '{a} <br/>{b} : {c} ({d}%)'\n        },\n        legend: {\n          left: 'center',\n          bottom: '10',\n          data: categoryList\n        },\n        series: [\n          {\n            name: 'WEEKLY WRITE ARTICLES',\n            type: 'pie',\n            roseType: 'radius',\n            radius: [15, 95],\n            center: ['50%', '38%'],\n            data: result,\n            animationEasing: 'cubicInOut',\n            animationDuration: 2600\n          }\n        ]\n      })\n      let chart = this.categoryChart\n      window.addEventListener(\"resize\",function(){\n        chart.resize();\n      });\n    },\n\n    //初始化访问线状图\n    initChart: function (datas) {\n      this.chart = echarts.init(document.getElementById('access'))\n      let data ={}\n      let createData =[]\n      let countData=[]\n      let accessData=[]\n      datas.forEach(item =>{\n        createData.push(item.createTime)\n        countData.push(item.ip)\n        accessData.push(item.access)\n      })\n      data.createData=createData\n      data.countData=countData\n      data.accessData=accessData\n      this.setOptions(data)\n\n    },\n\n    setOptions({ createData, countData ,accessData} = {}) {\n      this.chart.setOption({\n        xAxis: {\n          data: createData,\n          boundaryGap: false,\n          axisTick: {\n            show: false\n          }\n        },\n        grid: {\n          left: 10,\n          right: 10,\n          bottom: 20,\n          top: 30,\n          containLabel: true\n        },\n        tooltip: {\n          trigger: 'axis',\n          axisPointer: {\n            type: 'cross'\n          },\n          padding: [5, 10]\n        },\n        yAxis: {\n          axisTick: {\n            show: false\n          }\n        },\n        legend: {\n          data: [ '独立用户(UV)','访问量(PV)']\n        },\n        series: [\n          {\n            name: '独立用户(UV)',\n            smooth: true,\n            type: 'line',\n            itemStyle: {\n              normal: {\n                color: '#FF005A',\n                lineStyle: {\n                  color: '#FF005A',\n                  width: 2\n                }\n              }\n            },\n            data: countData,\n            animationDuration: 2800,\n            animationEasing: 'quadraticOut'\n          },\n          {\n            name: '访问量(PV)',\n            smooth: true,\n            type: 'line',\n            itemStyle: {\n              normal: {\n                color: '#3888fa',\n                lineStyle: {\n                  color: '#3888fa',\n                  width: 2\n                },\n                areaStyle: {\n                  color: '#f3f8ff'\n                }\n              }\n            },\n            data: accessData,\n            animationDuration: 2800,\n            animationEasing: 'quadraticOut'\n          }]\n      })\n      let chart = this.chart\n      window.addEventListener(\"resize\",function(){\n        chart.resize();\n      });\n    },\n    //关闭弹出框\n    closeNotificationDialogVisible: function (done) {\n      this.$store.dispatch('app/setOpenNotification', false)\n      done();\n    },\n    onClick: function (row) {\n      window.open(this.BLOG_WEB_URL + \"articles/\" + row.id);\n    },\n  }\n}\n</script>\n\n<style lang=\"scss\" scoped>\n.dashboard-editor-container {\n  padding: 32px;\n  background-color: rgb(240, 242, 245);\n  position: relative;\n\n  .github-corner {\n    position: absolute;\n    top: 0px;\n    border: 0;\n    right: 0;\n  }\n\n  .chart-wrapper {\n    background: #fff;\n    padding: 16px 16px 0;\n    margin-bottom: 32px;\n  }\n}\n\n@media (max-width:1024px) {\n  .chart-wrapper {\n    padding: 8px;\n  }\n}\n</style>\n"],"mappings":"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"}]}